/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated/route'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as TestsWatermelonSupabaseImport } from './routes/tests/watermelon-supabase'
import { Route as TestsWatermelonImport } from './routes/tests/watermelon'
import { Route as TestsSupabaseImport } from './routes/tests/supabase'
import { Route as authSignInImport } from './routes/(auth)/sign-in'
import { Route as authOtpImport } from './routes/(auth)/otp'
import { Route as auth500Import } from './routes/(auth)/500'

// Create Virtual Routes

const errors503LazyImport = createFileRoute('/(errors)/503')()
const errors500LazyImport = createFileRoute('/(errors)/500')()
const errors404LazyImport = createFileRoute('/(errors)/404')()
const errors403LazyImport = createFileRoute('/(errors)/403')()
const errors401LazyImport = createFileRoute('/(errors)/401')()
const authSignUpLazyImport = createFileRoute('/(auth)/sign-up')()
const authSignIn2LazyImport = createFileRoute('/(auth)/sign-in-2')()
const authForgotPasswordLazyImport = createFileRoute(
  '/(auth)/forgot-password',
)()
const AuthenticatedSettingsRouteLazyImport = createFileRoute(
  '/_authenticated/settings',
)()
const AuthenticatedUsersIndexLazyImport = createFileRoute(
  '/_authenticated/users/',
)()
const AuthenticatedTechnicalSpecsIndexLazyImport = createFileRoute(
  '/_authenticated/technical-specs/',
)()
const AuthenticatedTasksIndexLazyImport = createFileRoute(
  '/_authenticated/tasks/',
)()
const AuthenticatedSourceCodeIndexLazyImport = createFileRoute(
  '/_authenticated/source-code/',
)()
const AuthenticatedSettingsIndexLazyImport = createFileRoute(
  '/_authenticated/settings/',
)()
const AuthenticatedRoadmapIndexLazyImport = createFileRoute(
  '/_authenticated/roadmap/',
)()
const AuthenticatedProjectsIndexLazyImport = createFileRoute(
  '/_authenticated/projects/',
)()
const AuthenticatedPatternsIndexLazyImport = createFileRoute(
  '/_authenticated/patterns/',
)()
const AuthenticatedOverviewIndexLazyImport = createFileRoute(
  '/_authenticated/overview/',
)()
const AuthenticatedKnowledgeBaseIndexLazyImport = createFileRoute(
  '/_authenticated/knowledge-base/',
)()
const AuthenticatedHelpCenterIndexLazyImport = createFileRoute(
  '/_authenticated/help-center/',
)()
const AuthenticatedChatsIndexLazyImport = createFileRoute(
  '/_authenticated/chats/',
)()
const AuthenticatedBestPracticesIndexLazyImport = createFileRoute(
  '/_authenticated/best-practices/',
)()
const AuthenticatedArchitectureIndexLazyImport = createFileRoute(
  '/_authenticated/architecture/',
)()
const AuthenticatedAppsIndexLazyImport = createFileRoute(
  '/_authenticated/apps/',
)()
const AuthenticatedActivityIndexLazyImport = createFileRoute(
  '/_authenticated/activity/',
)()
const AuthenticatedSettingsNotificationsLazyImport = createFileRoute(
  '/_authenticated/settings/notifications',
)()
const AuthenticatedSettingsDisplayLazyImport = createFileRoute(
  '/_authenticated/settings/display',
)()
const AuthenticatedSettingsAppearanceLazyImport = createFileRoute(
  '/_authenticated/settings/appearance',
)()
const AuthenticatedSettingsAccountLazyImport = createFileRoute(
  '/_authenticated/settings/account',
)()
const AuthenticatedWorkflowsReviewIndexLazyImport = createFileRoute(
  '/_authenticated/workflows/review/',
)()
const AuthenticatedWorkflowsDocumentationIndexLazyImport = createFileRoute(
  '/_authenticated/workflows/documentation/',
)()
const AuthenticatedWorkflowsDevelopmentIndexLazyImport = createFileRoute(
  '/_authenticated/workflows/development/',
)()
const AuthenticatedWorkflowsDeploymentIndexLazyImport = createFileRoute(
  '/_authenticated/workflows/deployment/',
)()
const AuthenticatedKnowledgeBasePathIndexLazyImport = createFileRoute(
  '/_authenticated/knowledge-base/$path/',
)()

// Create/Update Routes

const AuthenticatedRouteRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const errors503LazyRoute = errors503LazyImport
  .update({
    id: '/(errors)/503',
    path: '/503',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/503.lazy').then((d) => d.Route))

const errors500LazyRoute = errors500LazyImport
  .update({
    id: '/(errors)/500',
    path: '/500',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/500.lazy').then((d) => d.Route))

const errors404LazyRoute = errors404LazyImport
  .update({
    id: '/(errors)/404',
    path: '/404',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/404.lazy').then((d) => d.Route))

const errors403LazyRoute = errors403LazyImport
  .update({
    id: '/(errors)/403',
    path: '/403',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/403.lazy').then((d) => d.Route))

const errors401LazyRoute = errors401LazyImport
  .update({
    id: '/(errors)/401',
    path: '/401',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/401.lazy').then((d) => d.Route))

const authSignUpLazyRoute = authSignUpLazyImport
  .update({
    id: '/(auth)/sign-up',
    path: '/sign-up',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(auth)/sign-up.lazy').then((d) => d.Route))

const authSignIn2LazyRoute = authSignIn2LazyImport
  .update({
    id: '/(auth)/sign-in-2',
    path: '/sign-in-2',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(auth)/sign-in-2.lazy').then((d) => d.Route))

const authForgotPasswordLazyRoute = authForgotPasswordLazyImport
  .update({
    id: '/(auth)/forgot-password',
    path: '/forgot-password',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() =>
    import('./routes/(auth)/forgot-password.lazy').then((d) => d.Route),
  )

const AuthenticatedSettingsRouteLazyRoute =
  AuthenticatedSettingsRouteLazyImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/route.lazy').then((d) => d.Route),
  )

const TestsWatermelonSupabaseRoute = TestsWatermelonSupabaseImport.update({
  id: '/tests/watermelon-supabase',
  path: '/tests/watermelon-supabase',
  getParentRoute: () => rootRoute,
} as any)

const TestsWatermelonRoute = TestsWatermelonImport.update({
  id: '/tests/watermelon',
  path: '/tests/watermelon',
  getParentRoute: () => rootRoute,
} as any)

const TestsSupabaseRoute = TestsSupabaseImport.update({
  id: '/tests/supabase',
  path: '/tests/supabase',
  getParentRoute: () => rootRoute,
} as any)

const authSignInRoute = authSignInImport.update({
  id: '/(auth)/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const authOtpRoute = authOtpImport.update({
  id: '/(auth)/otp',
  path: '/otp',
  getParentRoute: () => rootRoute,
} as any)

const auth500Route = auth500Import.update({
  id: '/(auth)/500',
  path: '/500',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedUsersIndexLazyRoute =
  AuthenticatedUsersIndexLazyImport.update({
    id: '/users/',
    path: '/users/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/users/index.lazy').then((d) => d.Route),
  )

const AuthenticatedTechnicalSpecsIndexLazyRoute =
  AuthenticatedTechnicalSpecsIndexLazyImport.update({
    id: '/technical-specs/',
    path: '/technical-specs/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/technical-specs/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedTasksIndexLazyRoute =
  AuthenticatedTasksIndexLazyImport.update({
    id: '/tasks/',
    path: '/tasks/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/tasks/index.lazy').then((d) => d.Route),
  )

const AuthenticatedSourceCodeIndexLazyRoute =
  AuthenticatedSourceCodeIndexLazyImport.update({
    id: '/source-code/',
    path: '/source-code/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/source-code/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedSettingsIndexLazyRoute =
  AuthenticatedSettingsIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/index.lazy').then((d) => d.Route),
  )

const AuthenticatedRoadmapIndexLazyRoute =
  AuthenticatedRoadmapIndexLazyImport.update({
    id: '/roadmap/',
    path: '/roadmap/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/roadmap/index.lazy').then((d) => d.Route),
  )

const AuthenticatedProjectsIndexLazyRoute =
  AuthenticatedProjectsIndexLazyImport.update({
    id: '/projects/',
    path: '/projects/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/projects/index.lazy').then((d) => d.Route),
  )

const AuthenticatedPatternsIndexLazyRoute =
  AuthenticatedPatternsIndexLazyImport.update({
    id: '/patterns/',
    path: '/patterns/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/patterns/index.lazy').then((d) => d.Route),
  )

const AuthenticatedOverviewIndexLazyRoute =
  AuthenticatedOverviewIndexLazyImport.update({
    id: '/overview/',
    path: '/overview/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/overview/index.lazy').then((d) => d.Route),
  )

const AuthenticatedKnowledgeBaseIndexLazyRoute =
  AuthenticatedKnowledgeBaseIndexLazyImport.update({
    id: '/knowledge-base/',
    path: '/knowledge-base/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/knowledge-base/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedHelpCenterIndexLazyRoute =
  AuthenticatedHelpCenterIndexLazyImport.update({
    id: '/help-center/',
    path: '/help-center/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/help-center/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedChatsIndexLazyRoute =
  AuthenticatedChatsIndexLazyImport.update({
    id: '/chats/',
    path: '/chats/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/chats/index.lazy').then((d) => d.Route),
  )

const AuthenticatedBestPracticesIndexLazyRoute =
  AuthenticatedBestPracticesIndexLazyImport.update({
    id: '/best-practices/',
    path: '/best-practices/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/best-practices/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedArchitectureIndexLazyRoute =
  AuthenticatedArchitectureIndexLazyImport.update({
    id: '/architecture/',
    path: '/architecture/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/architecture/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedAppsIndexLazyRoute = AuthenticatedAppsIndexLazyImport.update(
  {
    id: '/apps/',
    path: '/apps/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any,
).lazy(() =>
  import('./routes/_authenticated/apps/index.lazy').then((d) => d.Route),
)

const AuthenticatedActivityIndexLazyRoute =
  AuthenticatedActivityIndexLazyImport.update({
    id: '/activity/',
    path: '/activity/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/activity/index.lazy').then((d) => d.Route),
  )

const AuthenticatedSettingsNotificationsLazyRoute =
  AuthenticatedSettingsNotificationsLazyImport.update({
    id: '/notifications',
    path: '/notifications',
    getParentRoute: () => AuthenticatedSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/notifications.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedSettingsDisplayLazyRoute =
  AuthenticatedSettingsDisplayLazyImport.update({
    id: '/display',
    path: '/display',
    getParentRoute: () => AuthenticatedSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/display.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedSettingsAppearanceLazyRoute =
  AuthenticatedSettingsAppearanceLazyImport.update({
    id: '/appearance',
    path: '/appearance',
    getParentRoute: () => AuthenticatedSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/appearance.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedSettingsAccountLazyRoute =
  AuthenticatedSettingsAccountLazyImport.update({
    id: '/account',
    path: '/account',
    getParentRoute: () => AuthenticatedSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/account.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedWorkflowsReviewIndexLazyRoute =
  AuthenticatedWorkflowsReviewIndexLazyImport.update({
    id: '/workflows/review/',
    path: '/workflows/review/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/workflows/review/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedWorkflowsDocumentationIndexLazyRoute =
  AuthenticatedWorkflowsDocumentationIndexLazyImport.update({
    id: '/workflows/documentation/',
    path: '/workflows/documentation/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/workflows/documentation/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedWorkflowsDevelopmentIndexLazyRoute =
  AuthenticatedWorkflowsDevelopmentIndexLazyImport.update({
    id: '/workflows/development/',
    path: '/workflows/development/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/workflows/development/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedWorkflowsDeploymentIndexLazyRoute =
  AuthenticatedWorkflowsDeploymentIndexLazyImport.update({
    id: '/workflows/deployment/',
    path: '/workflows/deployment/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/workflows/deployment/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedKnowledgeBasePathIndexLazyRoute =
  AuthenticatedKnowledgeBasePathIndexLazyImport.update({
    id: '/knowledge-base/$path/',
    path: '/knowledge-base/$path/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/knowledge-base/$path/index.lazy').then(
      (d) => d.Route,
    ),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/500': {
      id: '/(auth)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof auth500Import
      parentRoute: typeof rootRoute
    }
    '/(auth)/otp': {
      id: '/(auth)/otp'
      path: '/otp'
      fullPath: '/otp'
      preLoaderRoute: typeof authOtpImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-in': {
      id: '/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInImport
      parentRoute: typeof rootRoute
    }
    '/tests/supabase': {
      id: '/tests/supabase'
      path: '/tests/supabase'
      fullPath: '/tests/supabase'
      preLoaderRoute: typeof TestsSupabaseImport
      parentRoute: typeof rootRoute
    }
    '/tests/watermelon': {
      id: '/tests/watermelon'
      path: '/tests/watermelon'
      fullPath: '/tests/watermelon'
      preLoaderRoute: typeof TestsWatermelonImport
      parentRoute: typeof rootRoute
    }
    '/tests/watermelon-supabase': {
      id: '/tests/watermelon-supabase'
      path: '/tests/watermelon-supabase'
      fullPath: '/tests/watermelon-supabase'
      preLoaderRoute: typeof TestsWatermelonSupabaseImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/settings': {
      id: '/_authenticated/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsRouteLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/(auth)/forgot-password': {
      id: '/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordLazyImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-in-2': {
      id: '/(auth)/sign-in-2'
      path: '/sign-in-2'
      fullPath: '/sign-in-2'
      preLoaderRoute: typeof authSignIn2LazyImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-up': {
      id: '/(auth)/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof authSignUpLazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503LazyImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/settings/account': {
      id: '/_authenticated/settings/account'
      path: '/account'
      fullPath: '/settings/account'
      preLoaderRoute: typeof AuthenticatedSettingsAccountLazyImport
      parentRoute: typeof AuthenticatedSettingsRouteLazyImport
    }
    '/_authenticated/settings/appearance': {
      id: '/_authenticated/settings/appearance'
      path: '/appearance'
      fullPath: '/settings/appearance'
      preLoaderRoute: typeof AuthenticatedSettingsAppearanceLazyImport
      parentRoute: typeof AuthenticatedSettingsRouteLazyImport
    }
    '/_authenticated/settings/display': {
      id: '/_authenticated/settings/display'
      path: '/display'
      fullPath: '/settings/display'
      preLoaderRoute: typeof AuthenticatedSettingsDisplayLazyImport
      parentRoute: typeof AuthenticatedSettingsRouteLazyImport
    }
    '/_authenticated/settings/notifications': {
      id: '/_authenticated/settings/notifications'
      path: '/notifications'
      fullPath: '/settings/notifications'
      preLoaderRoute: typeof AuthenticatedSettingsNotificationsLazyImport
      parentRoute: typeof AuthenticatedSettingsRouteLazyImport
    }
    '/_authenticated/activity/': {
      id: '/_authenticated/activity/'
      path: '/activity'
      fullPath: '/activity'
      preLoaderRoute: typeof AuthenticatedActivityIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/apps/': {
      id: '/_authenticated/apps/'
      path: '/apps'
      fullPath: '/apps'
      preLoaderRoute: typeof AuthenticatedAppsIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/architecture/': {
      id: '/_authenticated/architecture/'
      path: '/architecture'
      fullPath: '/architecture'
      preLoaderRoute: typeof AuthenticatedArchitectureIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/best-practices/': {
      id: '/_authenticated/best-practices/'
      path: '/best-practices'
      fullPath: '/best-practices'
      preLoaderRoute: typeof AuthenticatedBestPracticesIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/chats/': {
      id: '/_authenticated/chats/'
      path: '/chats'
      fullPath: '/chats'
      preLoaderRoute: typeof AuthenticatedChatsIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/help-center/': {
      id: '/_authenticated/help-center/'
      path: '/help-center'
      fullPath: '/help-center'
      preLoaderRoute: typeof AuthenticatedHelpCenterIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/knowledge-base/': {
      id: '/_authenticated/knowledge-base/'
      path: '/knowledge-base'
      fullPath: '/knowledge-base'
      preLoaderRoute: typeof AuthenticatedKnowledgeBaseIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/overview/': {
      id: '/_authenticated/overview/'
      path: '/overview'
      fullPath: '/overview'
      preLoaderRoute: typeof AuthenticatedOverviewIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/patterns/': {
      id: '/_authenticated/patterns/'
      path: '/patterns'
      fullPath: '/patterns'
      preLoaderRoute: typeof AuthenticatedPatternsIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/projects/': {
      id: '/_authenticated/projects/'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof AuthenticatedProjectsIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/roadmap/': {
      id: '/_authenticated/roadmap/'
      path: '/roadmap'
      fullPath: '/roadmap'
      preLoaderRoute: typeof AuthenticatedRoadmapIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/settings/': {
      id: '/_authenticated/settings/'
      path: '/'
      fullPath: '/settings/'
      preLoaderRoute: typeof AuthenticatedSettingsIndexLazyImport
      parentRoute: typeof AuthenticatedSettingsRouteLazyImport
    }
    '/_authenticated/source-code/': {
      id: '/_authenticated/source-code/'
      path: '/source-code'
      fullPath: '/source-code'
      preLoaderRoute: typeof AuthenticatedSourceCodeIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/tasks/': {
      id: '/_authenticated/tasks/'
      path: '/tasks'
      fullPath: '/tasks'
      preLoaderRoute: typeof AuthenticatedTasksIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/technical-specs/': {
      id: '/_authenticated/technical-specs/'
      path: '/technical-specs'
      fullPath: '/technical-specs'
      preLoaderRoute: typeof AuthenticatedTechnicalSpecsIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/users/': {
      id: '/_authenticated/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof AuthenticatedUsersIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/knowledge-base/$path/': {
      id: '/_authenticated/knowledge-base/$path/'
      path: '/knowledge-base/$path'
      fullPath: '/knowledge-base/$path'
      preLoaderRoute: typeof AuthenticatedKnowledgeBasePathIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/workflows/deployment/': {
      id: '/_authenticated/workflows/deployment/'
      path: '/workflows/deployment'
      fullPath: '/workflows/deployment'
      preLoaderRoute: typeof AuthenticatedWorkflowsDeploymentIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/workflows/development/': {
      id: '/_authenticated/workflows/development/'
      path: '/workflows/development'
      fullPath: '/workflows/development'
      preLoaderRoute: typeof AuthenticatedWorkflowsDevelopmentIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/workflows/documentation/': {
      id: '/_authenticated/workflows/documentation/'
      path: '/workflows/documentation'
      fullPath: '/workflows/documentation'
      preLoaderRoute: typeof AuthenticatedWorkflowsDocumentationIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/workflows/review/': {
      id: '/_authenticated/workflows/review/'
      path: '/workflows/review'
      fullPath: '/workflows/review'
      preLoaderRoute: typeof AuthenticatedWorkflowsReviewIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedSettingsRouteLazyRouteChildren {
  AuthenticatedSettingsAccountLazyRoute: typeof AuthenticatedSettingsAccountLazyRoute
  AuthenticatedSettingsAppearanceLazyRoute: typeof AuthenticatedSettingsAppearanceLazyRoute
  AuthenticatedSettingsDisplayLazyRoute: typeof AuthenticatedSettingsDisplayLazyRoute
  AuthenticatedSettingsNotificationsLazyRoute: typeof AuthenticatedSettingsNotificationsLazyRoute
  AuthenticatedSettingsIndexLazyRoute: typeof AuthenticatedSettingsIndexLazyRoute
}

const AuthenticatedSettingsRouteLazyRouteChildren: AuthenticatedSettingsRouteLazyRouteChildren =
  {
    AuthenticatedSettingsAccountLazyRoute:
      AuthenticatedSettingsAccountLazyRoute,
    AuthenticatedSettingsAppearanceLazyRoute:
      AuthenticatedSettingsAppearanceLazyRoute,
    AuthenticatedSettingsDisplayLazyRoute:
      AuthenticatedSettingsDisplayLazyRoute,
    AuthenticatedSettingsNotificationsLazyRoute:
      AuthenticatedSettingsNotificationsLazyRoute,
    AuthenticatedSettingsIndexLazyRoute: AuthenticatedSettingsIndexLazyRoute,
  }

const AuthenticatedSettingsRouteLazyRouteWithChildren =
  AuthenticatedSettingsRouteLazyRoute._addFileChildren(
    AuthenticatedSettingsRouteLazyRouteChildren,
  )

interface AuthenticatedRouteRouteChildren {
  AuthenticatedSettingsRouteLazyRoute: typeof AuthenticatedSettingsRouteLazyRouteWithChildren
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedActivityIndexLazyRoute: typeof AuthenticatedActivityIndexLazyRoute
  AuthenticatedAppsIndexLazyRoute: typeof AuthenticatedAppsIndexLazyRoute
  AuthenticatedArchitectureIndexLazyRoute: typeof AuthenticatedArchitectureIndexLazyRoute
  AuthenticatedBestPracticesIndexLazyRoute: typeof AuthenticatedBestPracticesIndexLazyRoute
  AuthenticatedChatsIndexLazyRoute: typeof AuthenticatedChatsIndexLazyRoute
  AuthenticatedHelpCenterIndexLazyRoute: typeof AuthenticatedHelpCenterIndexLazyRoute
  AuthenticatedKnowledgeBaseIndexLazyRoute: typeof AuthenticatedKnowledgeBaseIndexLazyRoute
  AuthenticatedOverviewIndexLazyRoute: typeof AuthenticatedOverviewIndexLazyRoute
  AuthenticatedPatternsIndexLazyRoute: typeof AuthenticatedPatternsIndexLazyRoute
  AuthenticatedProjectsIndexLazyRoute: typeof AuthenticatedProjectsIndexLazyRoute
  AuthenticatedRoadmapIndexLazyRoute: typeof AuthenticatedRoadmapIndexLazyRoute
  AuthenticatedSourceCodeIndexLazyRoute: typeof AuthenticatedSourceCodeIndexLazyRoute
  AuthenticatedTasksIndexLazyRoute: typeof AuthenticatedTasksIndexLazyRoute
  AuthenticatedTechnicalSpecsIndexLazyRoute: typeof AuthenticatedTechnicalSpecsIndexLazyRoute
  AuthenticatedUsersIndexLazyRoute: typeof AuthenticatedUsersIndexLazyRoute
  AuthenticatedKnowledgeBasePathIndexLazyRoute: typeof AuthenticatedKnowledgeBasePathIndexLazyRoute
  AuthenticatedWorkflowsDeploymentIndexLazyRoute: typeof AuthenticatedWorkflowsDeploymentIndexLazyRoute
  AuthenticatedWorkflowsDevelopmentIndexLazyRoute: typeof AuthenticatedWorkflowsDevelopmentIndexLazyRoute
  AuthenticatedWorkflowsDocumentationIndexLazyRoute: typeof AuthenticatedWorkflowsDocumentationIndexLazyRoute
  AuthenticatedWorkflowsReviewIndexLazyRoute: typeof AuthenticatedWorkflowsReviewIndexLazyRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedSettingsRouteLazyRoute:
    AuthenticatedSettingsRouteLazyRouteWithChildren,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedActivityIndexLazyRoute: AuthenticatedActivityIndexLazyRoute,
  AuthenticatedAppsIndexLazyRoute: AuthenticatedAppsIndexLazyRoute,
  AuthenticatedArchitectureIndexLazyRoute:
    AuthenticatedArchitectureIndexLazyRoute,
  AuthenticatedBestPracticesIndexLazyRoute:
    AuthenticatedBestPracticesIndexLazyRoute,
  AuthenticatedChatsIndexLazyRoute: AuthenticatedChatsIndexLazyRoute,
  AuthenticatedHelpCenterIndexLazyRoute: AuthenticatedHelpCenterIndexLazyRoute,
  AuthenticatedKnowledgeBaseIndexLazyRoute:
    AuthenticatedKnowledgeBaseIndexLazyRoute,
  AuthenticatedOverviewIndexLazyRoute: AuthenticatedOverviewIndexLazyRoute,
  AuthenticatedPatternsIndexLazyRoute: AuthenticatedPatternsIndexLazyRoute,
  AuthenticatedProjectsIndexLazyRoute: AuthenticatedProjectsIndexLazyRoute,
  AuthenticatedRoadmapIndexLazyRoute: AuthenticatedRoadmapIndexLazyRoute,
  AuthenticatedSourceCodeIndexLazyRoute: AuthenticatedSourceCodeIndexLazyRoute,
  AuthenticatedTasksIndexLazyRoute: AuthenticatedTasksIndexLazyRoute,
  AuthenticatedTechnicalSpecsIndexLazyRoute:
    AuthenticatedTechnicalSpecsIndexLazyRoute,
  AuthenticatedUsersIndexLazyRoute: AuthenticatedUsersIndexLazyRoute,
  AuthenticatedKnowledgeBasePathIndexLazyRoute:
    AuthenticatedKnowledgeBasePathIndexLazyRoute,
  AuthenticatedWorkflowsDeploymentIndexLazyRoute:
    AuthenticatedWorkflowsDeploymentIndexLazyRoute,
  AuthenticatedWorkflowsDevelopmentIndexLazyRoute:
    AuthenticatedWorkflowsDevelopmentIndexLazyRoute,
  AuthenticatedWorkflowsDocumentationIndexLazyRoute:
    AuthenticatedWorkflowsDocumentationIndexLazyRoute,
  AuthenticatedWorkflowsReviewIndexLazyRoute:
    AuthenticatedWorkflowsReviewIndexLazyRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AuthenticatedRouteRouteWithChildren
  '/500': typeof errors500LazyRoute
  '/otp': typeof authOtpRoute
  '/sign-in': typeof authSignInRoute
  '/tests/supabase': typeof TestsSupabaseRoute
  '/tests/watermelon': typeof TestsWatermelonRoute
  '/tests/watermelon-supabase': typeof TestsWatermelonSupabaseRoute
  '/settings': typeof AuthenticatedSettingsRouteLazyRouteWithChildren
  '/forgot-password': typeof authForgotPasswordLazyRoute
  '/sign-in-2': typeof authSignIn2LazyRoute
  '/sign-up': typeof authSignUpLazyRoute
  '/401': typeof errors401LazyRoute
  '/403': typeof errors403LazyRoute
  '/404': typeof errors404LazyRoute
  '/503': typeof errors503LazyRoute
  '/': typeof AuthenticatedIndexRoute
  '/settings/account': typeof AuthenticatedSettingsAccountLazyRoute
  '/settings/appearance': typeof AuthenticatedSettingsAppearanceLazyRoute
  '/settings/display': typeof AuthenticatedSettingsDisplayLazyRoute
  '/settings/notifications': typeof AuthenticatedSettingsNotificationsLazyRoute
  '/activity': typeof AuthenticatedActivityIndexLazyRoute
  '/apps': typeof AuthenticatedAppsIndexLazyRoute
  '/architecture': typeof AuthenticatedArchitectureIndexLazyRoute
  '/best-practices': typeof AuthenticatedBestPracticesIndexLazyRoute
  '/chats': typeof AuthenticatedChatsIndexLazyRoute
  '/help-center': typeof AuthenticatedHelpCenterIndexLazyRoute
  '/knowledge-base': typeof AuthenticatedKnowledgeBaseIndexLazyRoute
  '/overview': typeof AuthenticatedOverviewIndexLazyRoute
  '/patterns': typeof AuthenticatedPatternsIndexLazyRoute
  '/projects': typeof AuthenticatedProjectsIndexLazyRoute
  '/roadmap': typeof AuthenticatedRoadmapIndexLazyRoute
  '/settings/': typeof AuthenticatedSettingsIndexLazyRoute
  '/source-code': typeof AuthenticatedSourceCodeIndexLazyRoute
  '/tasks': typeof AuthenticatedTasksIndexLazyRoute
  '/technical-specs': typeof AuthenticatedTechnicalSpecsIndexLazyRoute
  '/users': typeof AuthenticatedUsersIndexLazyRoute
  '/knowledge-base/$path': typeof AuthenticatedKnowledgeBasePathIndexLazyRoute
  '/workflows/deployment': typeof AuthenticatedWorkflowsDeploymentIndexLazyRoute
  '/workflows/development': typeof AuthenticatedWorkflowsDevelopmentIndexLazyRoute
  '/workflows/documentation': typeof AuthenticatedWorkflowsDocumentationIndexLazyRoute
  '/workflows/review': typeof AuthenticatedWorkflowsReviewIndexLazyRoute
}

export interface FileRoutesByTo {
  '/500': typeof errors500LazyRoute
  '/otp': typeof authOtpRoute
  '/sign-in': typeof authSignInRoute
  '/tests/supabase': typeof TestsSupabaseRoute
  '/tests/watermelon': typeof TestsWatermelonRoute
  '/tests/watermelon-supabase': typeof TestsWatermelonSupabaseRoute
  '/forgot-password': typeof authForgotPasswordLazyRoute
  '/sign-in-2': typeof authSignIn2LazyRoute
  '/sign-up': typeof authSignUpLazyRoute
  '/401': typeof errors401LazyRoute
  '/403': typeof errors403LazyRoute
  '/404': typeof errors404LazyRoute
  '/503': typeof errors503LazyRoute
  '/': typeof AuthenticatedIndexRoute
  '/settings/account': typeof AuthenticatedSettingsAccountLazyRoute
  '/settings/appearance': typeof AuthenticatedSettingsAppearanceLazyRoute
  '/settings/display': typeof AuthenticatedSettingsDisplayLazyRoute
  '/settings/notifications': typeof AuthenticatedSettingsNotificationsLazyRoute
  '/activity': typeof AuthenticatedActivityIndexLazyRoute
  '/apps': typeof AuthenticatedAppsIndexLazyRoute
  '/architecture': typeof AuthenticatedArchitectureIndexLazyRoute
  '/best-practices': typeof AuthenticatedBestPracticesIndexLazyRoute
  '/chats': typeof AuthenticatedChatsIndexLazyRoute
  '/help-center': typeof AuthenticatedHelpCenterIndexLazyRoute
  '/knowledge-base': typeof AuthenticatedKnowledgeBaseIndexLazyRoute
  '/overview': typeof AuthenticatedOverviewIndexLazyRoute
  '/patterns': typeof AuthenticatedPatternsIndexLazyRoute
  '/projects': typeof AuthenticatedProjectsIndexLazyRoute
  '/roadmap': typeof AuthenticatedRoadmapIndexLazyRoute
  '/settings': typeof AuthenticatedSettingsIndexLazyRoute
  '/source-code': typeof AuthenticatedSourceCodeIndexLazyRoute
  '/tasks': typeof AuthenticatedTasksIndexLazyRoute
  '/technical-specs': typeof AuthenticatedTechnicalSpecsIndexLazyRoute
  '/users': typeof AuthenticatedUsersIndexLazyRoute
  '/knowledge-base/$path': typeof AuthenticatedKnowledgeBasePathIndexLazyRoute
  '/workflows/deployment': typeof AuthenticatedWorkflowsDeploymentIndexLazyRoute
  '/workflows/development': typeof AuthenticatedWorkflowsDevelopmentIndexLazyRoute
  '/workflows/documentation': typeof AuthenticatedWorkflowsDocumentationIndexLazyRoute
  '/workflows/review': typeof AuthenticatedWorkflowsReviewIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/(auth)/500': typeof auth500Route
  '/(auth)/otp': typeof authOtpRoute
  '/(auth)/sign-in': typeof authSignInRoute
  '/tests/supabase': typeof TestsSupabaseRoute
  '/tests/watermelon': typeof TestsWatermelonRoute
  '/tests/watermelon-supabase': typeof TestsWatermelonSupabaseRoute
  '/_authenticated/settings': typeof AuthenticatedSettingsRouteLazyRouteWithChildren
  '/(auth)/forgot-password': typeof authForgotPasswordLazyRoute
  '/(auth)/sign-in-2': typeof authSignIn2LazyRoute
  '/(auth)/sign-up': typeof authSignUpLazyRoute
  '/(errors)/401': typeof errors401LazyRoute
  '/(errors)/403': typeof errors403LazyRoute
  '/(errors)/404': typeof errors404LazyRoute
  '/(errors)/500': typeof errors500LazyRoute
  '/(errors)/503': typeof errors503LazyRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/settings/account': typeof AuthenticatedSettingsAccountLazyRoute
  '/_authenticated/settings/appearance': typeof AuthenticatedSettingsAppearanceLazyRoute
  '/_authenticated/settings/display': typeof AuthenticatedSettingsDisplayLazyRoute
  '/_authenticated/settings/notifications': typeof AuthenticatedSettingsNotificationsLazyRoute
  '/_authenticated/activity/': typeof AuthenticatedActivityIndexLazyRoute
  '/_authenticated/apps/': typeof AuthenticatedAppsIndexLazyRoute
  '/_authenticated/architecture/': typeof AuthenticatedArchitectureIndexLazyRoute
  '/_authenticated/best-practices/': typeof AuthenticatedBestPracticesIndexLazyRoute
  '/_authenticated/chats/': typeof AuthenticatedChatsIndexLazyRoute
  '/_authenticated/help-center/': typeof AuthenticatedHelpCenterIndexLazyRoute
  '/_authenticated/knowledge-base/': typeof AuthenticatedKnowledgeBaseIndexLazyRoute
  '/_authenticated/overview/': typeof AuthenticatedOverviewIndexLazyRoute
  '/_authenticated/patterns/': typeof AuthenticatedPatternsIndexLazyRoute
  '/_authenticated/projects/': typeof AuthenticatedProjectsIndexLazyRoute
  '/_authenticated/roadmap/': typeof AuthenticatedRoadmapIndexLazyRoute
  '/_authenticated/settings/': typeof AuthenticatedSettingsIndexLazyRoute
  '/_authenticated/source-code/': typeof AuthenticatedSourceCodeIndexLazyRoute
  '/_authenticated/tasks/': typeof AuthenticatedTasksIndexLazyRoute
  '/_authenticated/technical-specs/': typeof AuthenticatedTechnicalSpecsIndexLazyRoute
  '/_authenticated/users/': typeof AuthenticatedUsersIndexLazyRoute
  '/_authenticated/knowledge-base/$path/': typeof AuthenticatedKnowledgeBasePathIndexLazyRoute
  '/_authenticated/workflows/deployment/': typeof AuthenticatedWorkflowsDeploymentIndexLazyRoute
  '/_authenticated/workflows/development/': typeof AuthenticatedWorkflowsDevelopmentIndexLazyRoute
  '/_authenticated/workflows/documentation/': typeof AuthenticatedWorkflowsDocumentationIndexLazyRoute
  '/_authenticated/workflows/review/': typeof AuthenticatedWorkflowsReviewIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/500'
    | '/otp'
    | '/sign-in'
    | '/tests/supabase'
    | '/tests/watermelon'
    | '/tests/watermelon-supabase'
    | '/settings'
    | '/forgot-password'
    | '/sign-in-2'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/503'
    | '/'
    | '/settings/account'
    | '/settings/appearance'
    | '/settings/display'
    | '/settings/notifications'
    | '/activity'
    | '/apps'
    | '/architecture'
    | '/best-practices'
    | '/chats'
    | '/help-center'
    | '/knowledge-base'
    | '/overview'
    | '/patterns'
    | '/projects'
    | '/roadmap'
    | '/settings/'
    | '/source-code'
    | '/tasks'
    | '/technical-specs'
    | '/users'
    | '/knowledge-base/$path'
    | '/workflows/deployment'
    | '/workflows/development'
    | '/workflows/documentation'
    | '/workflows/review'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/500'
    | '/otp'
    | '/sign-in'
    | '/tests/supabase'
    | '/tests/watermelon'
    | '/tests/watermelon-supabase'
    | '/forgot-password'
    | '/sign-in-2'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/503'
    | '/'
    | '/settings/account'
    | '/settings/appearance'
    | '/settings/display'
    | '/settings/notifications'
    | '/activity'
    | '/apps'
    | '/architecture'
    | '/best-practices'
    | '/chats'
    | '/help-center'
    | '/knowledge-base'
    | '/overview'
    | '/patterns'
    | '/projects'
    | '/roadmap'
    | '/settings'
    | '/source-code'
    | '/tasks'
    | '/technical-specs'
    | '/users'
    | '/knowledge-base/$path'
    | '/workflows/deployment'
    | '/workflows/development'
    | '/workflows/documentation'
    | '/workflows/review'
  id:
    | '__root__'
    | '/_authenticated'
    | '/(auth)/500'
    | '/(auth)/otp'
    | '/(auth)/sign-in'
    | '/tests/supabase'
    | '/tests/watermelon'
    | '/tests/watermelon-supabase'
    | '/_authenticated/settings'
    | '/(auth)/forgot-password'
    | '/(auth)/sign-in-2'
    | '/(auth)/sign-up'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/_authenticated/'
    | '/_authenticated/settings/account'
    | '/_authenticated/settings/appearance'
    | '/_authenticated/settings/display'
    | '/_authenticated/settings/notifications'
    | '/_authenticated/activity/'
    | '/_authenticated/apps/'
    | '/_authenticated/architecture/'
    | '/_authenticated/best-practices/'
    | '/_authenticated/chats/'
    | '/_authenticated/help-center/'
    | '/_authenticated/knowledge-base/'
    | '/_authenticated/overview/'
    | '/_authenticated/patterns/'
    | '/_authenticated/projects/'
    | '/_authenticated/roadmap/'
    | '/_authenticated/settings/'
    | '/_authenticated/source-code/'
    | '/_authenticated/tasks/'
    | '/_authenticated/technical-specs/'
    | '/_authenticated/users/'
    | '/_authenticated/knowledge-base/$path/'
    | '/_authenticated/workflows/deployment/'
    | '/_authenticated/workflows/development/'
    | '/_authenticated/workflows/documentation/'
    | '/_authenticated/workflows/review/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  auth500Route: typeof auth500Route
  authOtpRoute: typeof authOtpRoute
  authSignInRoute: typeof authSignInRoute
  TestsSupabaseRoute: typeof TestsSupabaseRoute
  TestsWatermelonRoute: typeof TestsWatermelonRoute
  TestsWatermelonSupabaseRoute: typeof TestsWatermelonSupabaseRoute
  authForgotPasswordLazyRoute: typeof authForgotPasswordLazyRoute
  authSignIn2LazyRoute: typeof authSignIn2LazyRoute
  authSignUpLazyRoute: typeof authSignUpLazyRoute
  errors401LazyRoute: typeof errors401LazyRoute
  errors403LazyRoute: typeof errors403LazyRoute
  errors404LazyRoute: typeof errors404LazyRoute
  errors500LazyRoute: typeof errors500LazyRoute
  errors503LazyRoute: typeof errors503LazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  auth500Route: auth500Route,
  authOtpRoute: authOtpRoute,
  authSignInRoute: authSignInRoute,
  TestsSupabaseRoute: TestsSupabaseRoute,
  TestsWatermelonRoute: TestsWatermelonRoute,
  TestsWatermelonSupabaseRoute: TestsWatermelonSupabaseRoute,
  authForgotPasswordLazyRoute: authForgotPasswordLazyRoute,
  authSignIn2LazyRoute: authSignIn2LazyRoute,
  authSignUpLazyRoute: authSignUpLazyRoute,
  errors401LazyRoute: errors401LazyRoute,
  errors403LazyRoute: errors403LazyRoute,
  errors404LazyRoute: errors404LazyRoute,
  errors500LazyRoute: errors500LazyRoute,
  errors503LazyRoute: errors503LazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/(auth)/500",
        "/(auth)/otp",
        "/(auth)/sign-in",
        "/tests/supabase",
        "/tests/watermelon",
        "/tests/watermelon-supabase",
        "/(auth)/forgot-password",
        "/(auth)/sign-in-2",
        "/(auth)/sign-up",
        "/(errors)/401",
        "/(errors)/403",
        "/(errors)/404",
        "/(errors)/500",
        "/(errors)/503"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated/route.tsx",
      "children": [
        "/_authenticated/settings",
        "/_authenticated/",
        "/_authenticated/activity/",
        "/_authenticated/apps/",
        "/_authenticated/architecture/",
        "/_authenticated/best-practices/",
        "/_authenticated/chats/",
        "/_authenticated/help-center/",
        "/_authenticated/knowledge-base/",
        "/_authenticated/overview/",
        "/_authenticated/patterns/",
        "/_authenticated/projects/",
        "/_authenticated/roadmap/",
        "/_authenticated/source-code/",
        "/_authenticated/tasks/",
        "/_authenticated/technical-specs/",
        "/_authenticated/users/",
        "/_authenticated/knowledge-base/$path/",
        "/_authenticated/workflows/deployment/",
        "/_authenticated/workflows/development/",
        "/_authenticated/workflows/documentation/",
        "/_authenticated/workflows/review/"
      ]
    },
    "/(auth)/500": {
      "filePath": "(auth)/500.tsx"
    },
    "/(auth)/otp": {
      "filePath": "(auth)/otp.tsx"
    },
    "/(auth)/sign-in": {
      "filePath": "(auth)/sign-in.tsx"
    },
    "/tests/supabase": {
      "filePath": "tests/supabase.tsx"
    },
    "/tests/watermelon": {
      "filePath": "tests/watermelon.tsx"
    },
    "/tests/watermelon-supabase": {
      "filePath": "tests/watermelon-supabase.tsx"
    },
    "/_authenticated/settings": {
      "filePath": "_authenticated/settings/route.lazy.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/settings/account",
        "/_authenticated/settings/appearance",
        "/_authenticated/settings/display",
        "/_authenticated/settings/notifications",
        "/_authenticated/settings/"
      ]
    },
    "/(auth)/forgot-password": {
      "filePath": "(auth)/forgot-password.lazy.tsx"
    },
    "/(auth)/sign-in-2": {
      "filePath": "(auth)/sign-in-2.lazy.tsx"
    },
    "/(auth)/sign-up": {
      "filePath": "(auth)/sign-up.lazy.tsx"
    },
    "/(errors)/401": {
      "filePath": "(errors)/401.lazy.tsx"
    },
    "/(errors)/403": {
      "filePath": "(errors)/403.lazy.tsx"
    },
    "/(errors)/404": {
      "filePath": "(errors)/404.lazy.tsx"
    },
    "/(errors)/500": {
      "filePath": "(errors)/500.lazy.tsx"
    },
    "/(errors)/503": {
      "filePath": "(errors)/503.lazy.tsx"
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/settings/account": {
      "filePath": "_authenticated/settings/account.lazy.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/settings/appearance": {
      "filePath": "_authenticated/settings/appearance.lazy.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/settings/display": {
      "filePath": "_authenticated/settings/display.lazy.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/settings/notifications": {
      "filePath": "_authenticated/settings/notifications.lazy.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/activity/": {
      "filePath": "_authenticated/activity/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/apps/": {
      "filePath": "_authenticated/apps/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/architecture/": {
      "filePath": "_authenticated/architecture/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/best-practices/": {
      "filePath": "_authenticated/best-practices/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/chats/": {
      "filePath": "_authenticated/chats/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/help-center/": {
      "filePath": "_authenticated/help-center/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/knowledge-base/": {
      "filePath": "_authenticated/knowledge-base/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/overview/": {
      "filePath": "_authenticated/overview/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/patterns/": {
      "filePath": "_authenticated/patterns/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/projects/": {
      "filePath": "_authenticated/projects/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/roadmap/": {
      "filePath": "_authenticated/roadmap/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/settings/": {
      "filePath": "_authenticated/settings/index.lazy.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/source-code/": {
      "filePath": "_authenticated/source-code/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/tasks/": {
      "filePath": "_authenticated/tasks/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/technical-specs/": {
      "filePath": "_authenticated/technical-specs/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/users/": {
      "filePath": "_authenticated/users/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/knowledge-base/$path/": {
      "filePath": "_authenticated/knowledge-base/$path/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/workflows/deployment/": {
      "filePath": "_authenticated/workflows/deployment/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/workflows/development/": {
      "filePath": "_authenticated/workflows/development/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/workflows/documentation/": {
      "filePath": "_authenticated/workflows/documentation/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/workflows/review/": {
      "filePath": "_authenticated/workflows/review/index.lazy.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
